class Solution{
    public:
    string findOrder(string dict[], int N, int K) {
        //code here
        
        vector<vector<int>> g(K);
        vector<int> indegree(K);
        
        for(int i=1;i<N;i++){
            
            string prev = dict[i-1];
            
            string curr = dict[i];
            
            for(int j=0;j<min(prev.length(),curr.length());j++){
                
                if(prev[j]!=curr[j]){
                    g[prev[j]-'a'].push_back(curr[j]-'a');
                    indegree[curr[j]-'a']++;
                    break;
                }
            }
        }
        
        string ans;
        
        queue<int>q;
        
        for(int i=0;i<K;i++){
            
            if(indegree[i]==0){
                q.push(i);
                ans+=char('a'+i);
            }
        }
        
        while(!q.empty()){
            
            auto f = q.front();
            
            q.pop();
            
            for(auto j:g[f]){
                
                indegree[j]--;
                
                if(indegree[j]==0){
                    
                    ans+=char('a'+j);
                    q.push(j);
                }
            }
        }

        return ans;
        
        
    }
};