class Solution
{
    public:
    //Function to find unit area of the largest region of 1s.
    int findMaxArea(vector<vector<int>>& grid) {
        // Code here
        
        int r = grid.size();
        
        int c = grid[0].size();
        
        int dx[8] = {-1,-1,0,1,1,1,0,-1};
        
        int dy[8] = {0,1,1,1,0,-1,-1,-1};
        
        vector<vector<bool>> visited(r,vector<bool>(c,false));
        
        int maxi=INT_MIN;
        
        for(int i=0;i<r;i++){
            
            for(int j=0;j<c;j++){
                
                if(grid[i][j]==1){
                    
                    if(visited[i][j]){
                        continue;
                    }
                    
                    queue<pair<int,int>>q;
                    
                    q.push({i,j});
                    
                    visited[i][j] = true;
                    
                    int ans=1;
                    
                    while(!q.empty()){
                        
                        auto f = q.front();
                        
                        q.pop();
                        
                        int x = f.first;
                        
                        int y = f.second;
                        
                        for(int i=0;i<8;i++){
                            
                            int newx = x + dx[i];
                            
                            int newy = y + dy[i];
                            
                            if(newx<0 || newx>=r || newy<0 || newy>=c){
                                continue;
                            }
                            
                            else if(grid[newx][newy]==0){
                                continue;
                            }
                            
                            else if(!visited[newx][newy]){
                                ans++;
                                visited[newx][newy]=true;
                                q.push({newx,newy});
                            }
                        }
                    }
                    
                    maxi = max(maxi,ans);
                }
            }
        }
        
        return maxi;
    }
};