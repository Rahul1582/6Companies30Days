class Solution {
public:
    
    int count(int n,vector<int>& weights){
// This function calculates the number of days required to ship the mid number of products.
        
        int tar=0;
        int curr =0;
        
        for(int i=0;i<weights.size();i++){
            
            curr+=weights[i];
            
            if(curr>n){
                
                curr= weights[i];
                
                tar++;
                
            }
        
        }
        
        if(curr!=0 && curr<=n){
            tar++;
        }
        
        return tar;
        
    }
    
    int shipWithinDays(vector<int>& weights, int days) {
        
        int sum=0;
        
        for(auto i:weights){
            sum+=i;
        }

        int st = *max_element(weights.begin(),weights.end());
        
        int en= sum;
        
        while(st<en){
            
            int mid = st + (en-st)/2;
            
            // cout<<st<<" "<<en<<" ";

            if(count(mid,weights)>days)// count when we can take mid quantity is more than the required days, then we need to increase the mid quantity. Other wise we have to decrease the mid quantity.
                
// As weight increase days decrease and if weight decrease then days increase.
            {
                cout<<mid<<" ";
               st = mid+1;// so increasing the mid quantity.
            }
            
            else{// if days<=count function value the we set en = mid as least weight capacity is asked so we go untill st<en.
                 en = mid;
            }
        }
        
        return st;
    }
};