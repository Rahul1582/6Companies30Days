class Solution {
public:
    int findInMountainArray(int target, MountainArray &mountainarr) {
        
        int st=0;
        
        int en = mountainarr.length()-1;
        
        int n=en+1;
        
        int ans=-1;
        
        int h1;
        
        
        while(st<en)
        {
            int mid = st + (en-st)/2;
            
            int ele = mountainarr.get(mid);
            
            if(ele <mountainarr.get(mid+1)){
                h1 = mid+1;
                st = mid+1;
            }
                
            
            else if(ele >mountainarr.get(mid+1))
            {
                 en = mid;
            }
               
        }
        
        int s1 = 0;
        
        int e1 = h1;
        
        int s2 = h1;
        
        int e2 = n;
        
        int ans1=-1;
        
        int ans2 = -1;
        
        while(s1<e1){
            
            int mid = s1 + (e1-s1)/2;
            
            if(mountainarr.get(mid)==target){
                
                ans1=mid;
                break;
            }
            
            else if(mountainarr.get(mid)<target){
                
                s1 = mid+1;
            }
            
            else{
                e1 = mid;
            }
        }
        
                
        while(s2<e2){
            
            int mid = s2 + (e2-s2)/2;
            
            if(mountainarr.get(mid)==target){
                ans2=mid;
                break;
            }
            
            else if(mountainarr.get(mid)>target){
                
                s2 = mid+1;
            }
            
            else{
                e2 = mid;
            }
        }
        
        if(ans1!=-1 && ans2!=-1){
            return min(ans1,ans2);
        }
        
        else if(ans1!=-1){
            return ans1;
        }
        
        else if(ans2!=-1){
            return ans2;
        }
        
        else{
            return -1;
        }

    }
};